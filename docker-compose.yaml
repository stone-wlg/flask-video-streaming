version: "3.7"

services: 
  flask-video-streaming:
    image: "stonewlg/flask-video-streaming:latest"
    container_name: "flask-video-streaming"
    ports:
      - "5000:5000"
    environment: 
      CAMERA: "opencv_knn"
      OPENCV_CAMERA_SOURCE: "http://10.125.23.221:8080/?action=stream?dummy=param.mjpg"
      CONNECTION: "dbname=robot user=postgres password=robot@321 host=timescaledb port=5432"
    volumes: 
      - "./images:/flask-video-streaming/images"
    restart: "unless-stopped"
    networks:
      - "flask-video-streaming-net"

  timescaledb:
    image: "timescale/timescaledb:latest-pg12"
    container_name: "timescaledb"
    privileged: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "robot"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "robot@321"
    volumes:
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"  
      - "./data:/var/lib/postgresql/data"
    restart: "always"
    networks:
      - "flask-video-streaming-net"    

  nginx:
    image: "nginx:1.17.10-alpine"
    container_name: "nginx"
    ports:
      - "80:80"
      - "443:443"
    volumes: 
      - "./nginx.conf:/etc/nginx/conf.d/server.conf" 
      - "./certs:/certs"     
      - "./images:/flask-video-streaming/images"      
    restart: "unless-stopped"
    networks:
      - "flask-video-streaming-net"

networks:
  flask-video-streaming-net:
    external: false
    name: "flask-video-streaming-net"
